import Bag from "../models/Bag.mjs";

export class BagRepo {
    /** 
     * Creates a new empty bag.
     * @param {Bag} bagType - Type of the bag (e.g., "regular", "surprise").
     * @param {number} estId - The establishment ID associated with the bag.
     * @param {number} size - "small", "medium", "large".
     * @param {Array<string>} tags - Example: ["vegan", "gluten free"].
     * @param {number} price - The price of the bag.
     * @param {string} pickupTimeStart - The start time for pickup in ISO 8601 format.
     * @param {string} pickupTimeEnd - The end time for pickup in ISO 8601 format.
     * @returns {Bag} - The bag that was added to the cart, with the new ID generated by the system.
     */
    createBag(bagType, estId, size, tags, price, pickupTimeStart, pickupTimeEnd) {

    }
    
    /**
     * Returns the bag with the given ID.
     * @param {number} bagId
     * @returns {Bag}
     */
    getBag(bagId) { }

    /**
     * Lists all the available bags, from every establishment.
     * A bag is available if no one reserved it yet and it can be picked up now.
     * 
     * @returns {Array<Bag>}
     */
    listAvailable() {}

    /**
     * Creates and adds a new item to the bag.
     * @param {number} bagId
     * @param {string} name
     * @param {number} quantity - Must always be greater than 0.
     * @returns {BagItem} - The item that was added to the bag, with the ID generated by the system.
     */
    addItem(bagId, name, quantity) { }

    /**
     * Remove and deletes the item in the bag.
     * @param {number} bagId
     * @param {number} itemId
     */
    removeItem(bagId, itemId) { }

    /**
     * Updates the attributes of an item in the bag.
     * @param {number} bagId
     * @param {string} name
     * @param {number} quantity - Must always be greater than 0.
     */
    updateItem(bagId, itemId, name, quantity) { }

}